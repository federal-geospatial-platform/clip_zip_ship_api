openapi: 3.0.2
servers:
- description: NRCan's implementation of the PyGeoAPI to provide an API to NRCan's
    geospatial data
  url: https://czs-pygeoapi.ddr-stage.services.geo.ca
tags:
- description: NRCan's implementation of the PyGeoAPI to provide an API to NRCan's
    geospatial data
  externalDocs:
    description: information
    url: https://github.com/geopython/pygeoapi
  name: server

info:
  contact:
    email: you@example.org
    name: pygeoapi Development Team
    url: https://pygeoapi.io
  description: NRCan's implementation of the PyGeoAPI to provide an API to NRCan's geospatial data
  license:
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  title: PyGeoAPI for NRCan collections
  version: 0.2.1
  x-keywords:
  - geospatial
  - data
  - api

components:
  parameters:
    f:
      name: f
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document. The default format
        is GeoJSON.
      explode: false
      in: query
      required: false
      schema:
        default: json
        enum:
        - json
        - html
        - jsonld
        type: string
      style: form
    lang:
      name: lang
      description: The optional lang parameter instructs the server return a response
        in a certain language, if supported. If the language is not among the available
        values, the Accept-Language header language will be used if it is supported.
        If the header is missing, the default server language is used. Note that providers
        may only support a single language (or often no language at all), that can
        be different from the server language. Language strings can be written in
        a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
        or locale-like (e.g. "de-CH" or "fr_BE") fashion.
      in: query
      required: false
      schema:
        default: en-US
        enum:
        - en-US
        - fr-CA
        type: string
    offset:
      name: offset
      description: The optional offset parameter indicates the index within the result
        set from which the server shall begin presenting results in the response document. The
        first element has an index of 0 (default).
      explode: false
      in: query
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    properties:
      name: properties
      description: The properties that should be included for each feature. The parameter
        value is a comma-separated list of property names.
      explode: false
      in: query
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    skipGeometry:
      name: skipGeometry
      description: This option can be used to skip response geometries for each feature.
      explode: false
      in: query
      required: false
      schema:
        default: false
        type: boolean
      style: form
    vendorSpecificParameters:
      name: vendorSpecificParameters
      description: Additional "free-form" parameters that are not explicitly defined
      in: query
      schema:
        additionalProperties: true
        type: object
      style: form
    collectionId:
      name: collectionId
      description: local identifier of a collection based on features
      in: path
      required: true
      schema:
        type: string
      example: major_projects___major_projects_inventory_point
    collectionIdCoverage:
      name: collectionId
      description: local identifier of a collection based on coverage
      in: path
      required: true
      schema:
        type: string
      example: cdem_alex__cdem
    bbox:
      name: bbox
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84 longitude/latitude
        (https://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
        reference system is specified in the parameter `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      in: query
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: float
        default:
        - -72.3061
        - 45.3656
        - -71.7477
        - 45.9375
      style: form
      explode: false
    bbox-2:
      name: bbox
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84 longitude/latitude
        (https://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
        reference system is specified in the parameter `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      in: query
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: float
        default:
        - -123.1205
        - 49.293
        - -123.1204
        - 49.294
      style: form
      explode: false
    bbox-crs:
      name: bbox-crs
      description: |-
        Indicates the EPSG for the given bbox coordinates
      in: query
      required: false
      schema:
        type: number
        format: integer
        default: 4326
      style: form
      explode: false
    geom:
      name: geom
      description: |-
        Only features that have a geometry that intersects the provided geometry are selected.
        The geometry is provided as a well known text format (WKT)
      in: query
      required: false
      schema:
        type: string
        default: POLYGON((-72.3061 45.3656, -72.3061 45.9375, -71.7477 45.9375, -71.7477 45.3656, -72.3061 45.3656))
      style: form
      explode: false
    geom-crs:
      name: geom-crs
      description: |-
        Indicates the EPSG for the given geom wkt
      in: query
      required: false
      schema:
        type: number
        format: integer
        default: 4326
      style: form
      explode: false
    filter:
      name: filter
      description: A CQL filter
      in: query
      required: false
      schema:
        type: string
      style: form
      explode: false
  responses:
    '200':
      description: successful operation
    Queryables:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
      description: successful queryables operation
    default:
      content:
        application/json:
          schema:
            $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml
      description: Unexpected error
  schemas:
    queryable:
      properties:
        description:
          description: a human-readable narrative describing the queryable
          type: string
        language:
          default:
          - en
          description: the language used for the title and description
          type: string
        queryable:
          description: the token that may be used in a CQL predicate
          type: string
        title:
          description: a human readable title for the queryable
          type: string
        type:
          description: the data type of the queryable
          type: string
        type-ref:
          description: a reference to the formal definition of the type
          format: url
          type: string
      required:
      - queryable
      - type
      type: object
    queryables:
      properties:
        queryables:
          items:
            $ref: '#/components/schemas/queryable'
          type: array
      required:
      - queryables
      type: object
    collbbox:
      properties:
        bbox:
          type: array
          items:
            type: number
            format: float
          example:
          - -103.7402
          - 55.4461
          - -103.2597
          - 55.8272
        bbox-crs:
          type: number
          format: integer
          example: 4326
        geom:
          type: string
          example: POLYGON ((-72.3061 45.3656, -72.3061 45.9375, -71.7477 45.9375, -71.7477 45.3656, -72.3061 45.3656))
        geom-crs:
          type: number
          format: integer
          example: 4326

    reload_res:
      type: object
      properties:
        reloaded:
          type: boolean
          example: true

    extract_exec:
      properties:
        inputs:
          properties:
            collections:
              type: array
              items:
                type: string
              example:
              - gsc_seismic_ref__hudson-james-ungava-bays
              - gsc_surficial_g__surficial-geology-boundaries
            email:
              type: string
              example: alexandre.roy@nrcan-rncan.gc.ca
            geom:
              type: string
              example: POLYGON((15287 1143694,75187 1146778,67764 1119560,15287 1143694))
            geom_smaller:
              type: string
              example: POLYGON((-71.8477 45.3656, -71.8477 45.3666, -71.8466 45.3666, -71.8466 45.3656, -71.8477 45.3656))
            geom_crs:
              type: number
              format: integer
              example: 3978
paths:
  /:
    get:
      description: Landing page
      operationId: getLandingPage
      parameters:
      - $ref: "#/components/parameters/f"
      - $ref: "#/components/parameters/lang"
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
      - server
  /collections:
    get:
      description: Queries the collections. Provide a bbox or geometry to spatially filter the collections on a region
      operationId: getCollections
      parameters:
      - $ref: "#/components/parameters/f"
      - $ref: "#/components/parameters/lang"
      - $ref: "#/components/parameters/bbox"
      - $ref: "#/components/parameters/bbox-crs"
      - $ref: "#/components/parameters/geom"
      - $ref: "#/components/parameters/geom-crs"
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
      - collections
    post:
      description: Queries the collections. Provide a bbox or geometry to spatially filter the collections on a region
      operationId: getCollectionsPost
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collbbox'
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
      - collections
  /collections/{collectionId}:
    get:
      summary: Collection information
      description: Gets the information on a given Collection. The Collection default provider must be of type "feature".
      operationId: getCollection
      parameters:
      - "$ref": "#/components/parameters/collectionId"
      - "$ref": "#/components/parameters/f"
      - "$ref": "#/components/parameters/lang"
      responses:
        '200':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /collections/{collectionId}/items:
    get:
      summary: List items
      description: Gets a list of items in the given Collection. The Collection default provider must be of type "feature".
      operationId: getCollectionItems
      parameters:
      - "$ref": "#/components/parameters/collectionId"
      - description: The optional f parameter indicates the output format which the server shall provide as part of the response document. The default format is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - description: The optional lang parameter instructs the server return a response in a certain language, if supported. If the language is not among the available values, the Accept-Language header language will be used if it is supported. If the header is missing, the default server language is used. Note that providers may only support a single language (or often no language at all), that can be different from the server language. Language strings can be written in a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de") or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      - $ref: "#/components/parameters/bbox"
      - $ref: "#/components/parameters/bbox-crs"
      - $ref: "#/components/parameters/geom"
      - $ref: "#/components/parameters/geom-crs"
      - $ref: "#/components/parameters/filter"
      - $ref: https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - recordCreated
            - recordUpdated
            - type
            - title
            - description
            - contactPoint
            - associations
            - externalId
            - themes
            - q
            type: string
          type: array
        style: form
      - "$ref": "#/components/parameters/vendorSpecificParameters"
      - "$ref": "#/components/parameters/skipGeometry"
      - "$ref": https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - "$ref": "#/components/parameters/offset"
      - "$ref": https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/q.yaml
      - "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime
      - explode: false
        in: query
        name: recordCreated
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: recordUpdated
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: contactPoint
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: associations
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: themes
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
    post:
      summary: List items
      description: Gets a list of items in the given Collection. The Collection default provider must be of type "feature".
      operationId: getCollectionItemsPost
      parameters:
      - "$ref": "#/components/parameters/collectionId"
      - description: The optional f parameter indicates the output format which the server shall provide as part of the response document. The default format is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - description: The optional lang parameter instructs the server return a response in a certain language, if supported. If the language is not among the available values, the Accept-Language header language will be used if it is supported. If the header is missing, the default server language is used. Note that providers may only support a single language (or often no language at all), that can be different from the server language. Language strings can be written in a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de") or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      - $ref: "#/components/parameters/bbox"
      - $ref: "#/components/parameters/bbox-crs"
      - $ref: "#/components/parameters/geom"
      - $ref: "#/components/parameters/geom-crs"
      - $ref: "#/components/parameters/filter"
      - $ref: https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - recordCreated
            - recordUpdated
            - type
            - title
            - description
            - contactPoint
            - associations
            - externalId
            - themes
            - q
            type: string
          type: array
        style: form
      - "$ref": "#/components/parameters/vendorSpecificParameters"
      - "$ref": "#/components/parameters/skipGeometry"
      - "$ref": https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - "$ref": "#/components/parameters/offset"
      - "$ref": https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/q.yaml
      - "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime
      - explode: false
        in: query
        name: recordCreated
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: recordUpdated
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: contactPoint
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: associations
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: themes
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /collections/{collectionId}/items/{featureId}:
    get:
      summary: Specific Feature in a Collection
      description: Gets a specific Feature in the given Collection. The Collection default provider must be of type "feature".
      operationId: getCollectionItem
      parameters:
      - "$ref": "#/components/parameters/collectionId"
      - "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - "$ref": "#/components/parameters/f"
      - "$ref": "#/components/parameters/lang"
      responses:
        '200':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /collections/{collectionId}/queryables:
    get:
      summary: Information on Queryables
      description: Gets the Queryables information for the given Collection. The Collection default provider must be of type "feature".
      operationId: getCollectionQueryables
      parameters:
      - "$ref": "#/components/parameters/collectionId"
      - description: The optional f parameter indicates the output format which the server shall provide as part of the response document. The default format is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - description: The optional lang parameter instructs the server return a response in a certain language, if supported. If the language is not among the available values, the Accept-Language header language will be used if it is supported. If the header is missing, the default server language is used. Note that providers may only support a single language (or often no language at all), that can be different from the server language. Language strings can be written in a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de") or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      responses:
        '200':
          "$ref": "#/components/responses/Queryables"
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /collections/{collectionId}/coverage:
    get:
      summary: Get Coverage
      description: Gets the Coverage information for the given Collection. The Collection default provider must be of type "coverage".
      operationId: getCollectionCoverage
      parameters:
      - $ref: "#/components/parameters/collectionIdCoverage"
      - description: The optional f parameter indicates the output format which the server shall provide as part of the response document. The default format is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - description: The optional lang parameter instructs the server return a response
          in a certain language, if supported. If the language is not among the available
          values, the Accept-Language header language will be used if it is supported.
          If the header is missing, the default server language is used. Note that providers
          may only support a single language (or often no language at all), that can
          be different from the server language. Language strings can be written in
          a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
          or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      - $ref: '#/components/parameters/bbox-2'
      - $ref: "#/components/parameters/bbox-crs"
      - $ref: "#/components/parameters/geom"
      - $ref: "#/components/parameters/geom-crs"
      responses:
        '200':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /collections/{collectionId}/coverage/domainset:
    get:
      summary: Get Coverage Domain Set
      description: Gets the Coverage Domain Set for the given Collection. The Collection default provider must be of type "coverage".
      operationId: getCollectionCoverageDomainSet
      parameters:
      - "$ref": "#/components/parameters/collectionIdCoverage"
      - description: The optional f parameter indicates the output format which the server shall provide as part of the response document. The default format is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - description: The optional lang parameter instructs the server return a response
          in a certain language, if supported. If the language is not among the available
          values, the Accept-Language header language will be used if it is supported.
          If the header is missing, the default server language is used. Note that providers
          may only support a single language (or often no language at all), that can
          be different from the server language. Language strings can be written in
          a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
          or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      responses:
        '200':
          "$ref": https://raw.githubusercontent.com/tomkralidis/ogcapi-coverages-1/fix-cis/yaml-unresolved/schemas/cis_1.1/domainSet.yaml
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /collections/{collectionId}/coverage/rangetype:
    get:
      summary: Get Coverage Range Type
      description: Gets the Coverage Range Type for the given Collection. The Collection default provider must be of type "coverage".
      operationId: getCollectionCoverageRangeType
      parameters:
      - "$ref": "#/components/parameters/collectionIdCoverage"
      - description: The optional f parameter indicates the output format which the server shall provide as part of the response document. The default format is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - description: The optional lang parameter instructs the server return a response
          in a certain language, if supported. If the language is not among the available
          values, the Accept-Language header language will be used if it is supported.
          If the header is missing, the default server language is used. Note that providers
          may only support a single language (or often no language at all), that can
          be different from the server language. Language strings can be written in
          a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
          or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      responses:
        '200':
          "$ref": https://raw.githubusercontent.com/tomkralidis/ogcapi-coverages-1/fix-cis/yaml-unresolved/schemas/cis_1.1/rangeType.yaml
        '400':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          "$ref": https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - collections
  /conformance:
    get:
      summary: API conformance definition
      description: API conformance definition
      operationId: getConformanceDeclaration
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      tags:
      - server
  /openapi:
    get:
      summary: This document
      description: This document
      operationId: getOpenapi
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      - description: UI to render the OpenAPI document
        explode: false
        in: query
        name: ui
        required: false
        schema:
          default: swagger
          enum:
          - swagger
          - redoc
          type: string
        style: form
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: '#/components/responses/default'
      tags:
      - server

  /reload_resources:
    get:
      summary: Reloads the resources collections from the database
      description: Reloads the resources collections from the database
      operationId: getReloadResources
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reload_res'
      tags:
      - server

  /processes:
    get:
      description: Processes
      operationId: getProcesses
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ProcessList.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Processes
      tags:
      - process
  /processes/extract:
    get:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: describeExtractProcess
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - process
  /processes/extract/execution:
    post:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: executeExtractJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extract_exec'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        '500':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process Extract execution
      tags:
      - process
  /jobs:
    get:
      summary: Gets all Jobs
      description: Gets all Jobs
      operationId: getJobs
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/JobList.yaml
        default:
          $ref: '#/components/responses/default'
      tags:
      - process
  /jobs/{jobId}:
    get:
      summary: Gets status information on a particular Job
      description: Gets status information on a particular Job
      operationId: getJobInfoById
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: "https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/jobId.yaml"
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/StatusInfo.yaml
        default:
          $ref: '#/components/responses/default'
      tags:
      - process
    delete:
      summary: Deletes a particular Job
      description: Deletes a particular Job
      operationId: deleteJobById
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: "https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/jobId.yaml"
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/StatusInfo.yaml
        default:
          $ref: '#/components/responses/default'
      tags:
      - process
  /jobs/{jobId}/results:
    get:
      summary: Gets results of a particular Job
      description: Gets results of a particular Job
      operationId: getJobResultsById
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: "https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/jobId.yaml"
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/Results.yaml
        default:
          $ref: '#/components/responses/default'
      tags:
      - process

