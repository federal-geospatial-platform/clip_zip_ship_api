server:
    bind:
        host: 0.0.0.0
        port: 5000
    url: http://localhost:5000
    mimetype: application/json; charset=UTF-8
    encoding: utf-8
    gzip: false
    languages:
    - en-US
    - fr-CA
    cors: true
    pretty_print: true
    limit: 50
    map:
        url: https://tile.openstreetmap.org/{z}/{x}/{y}.png
        url_: https://maps-cartes.services.geo.ca/server2_serveur2/rest/services/BaseMaps/CBME_CBCE_HS_RO_3978/MapServer/tile/{z}/{y}/{x}
        attribution: <a href="https://wikimediafoundation.org/wiki/Maps_Terms_of_Use">Wikimedia
            maps</a> | Map data &copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap
            contributors</a>
    ogc_schemas_location: http://schemas.opengis.net
    #templates:
    #    path: C:\Users\alexandre.roy\Anaconda3\envs\.env-pygeoapi-core3\Lib\site-packages\pygeoapi-0.13.dev0-py3.9.egg\pygeoapi\templates

    manager:  # optional OGC API - Processes asynchronous job management
        name: TinyDB  # plugin name (see pygeoapi.plugin for supported process_manager's)
        connection: jobs/pygeoapi-process-manager.db  # connection info to store jobs (e.g. filepath)
        output_dir: jobs/  # temporary file area for storing job results (files)

logging:
    level: INFO
metadata:
    identification:
        title: PyGeoAPI for NRCan collections
        description: NRCan's implementation of the PyGeoAPI to provide an API to NRCan's
            geospatial data
        keywords:
        - geospatial
        - data
        - api
        keywords_type: theme
        terms_of_service: https://creativecommons.org/licenses/by/4.0/
        url: https://github.com/geopython/pygeoapi
    license:
        name: CC-BY 4.0 license
        url: https://creativecommons.org/licenses/by/4.0/
    provider:
        name: pygeoapi Development Team
        url: https://pygeoapi.io
    contact:
        name: Roy, Alexandre
        position: Lead Dev
        address: Mailing Address
        city: City
        stateorprovince: Administrative Area
        postalcode: Zip or Postal Code
        country: Canada
        phone: +xx-xxx-xxx-xxxx
        fax: +xx-xxx-xxx-xxxx
        email: you@example.org
        url: Contact URL
        hours: Hours of Service
        instructions: During hours of service. Off on weekends.
        role: pointOfContact

settings:
    extract_url: http://ftp.ftp-staging.services.geo.ca/pub/czs/
    catalogue_url: https://maps.canada.ca/geonetwork/srv/eng/csw?request=GetRecordById&service=CSW&version=2.0.2&elementSetName=full&outputSchema=http://www.isotc211.org/2005/gmd&typeNames=gmd:MD_Metadata&constraintLanguage=FILTER&id={metadata_uuid}


resources:
    obs:
        type: collection
        title: Observations
        description: My cool observations
        keywords:
            - observations
            - monitoring
        context:
            - datetime: https://schema.org/DateTime
            - vocab: https://example.com/vocab#
              stn_id: "vocab:stn_id"
              value: "vocab:value"
        links:
            - type: text/csv
              rel: canonical
              title: data
              href: https://github.com/mapserver/mapserver/blob/branch-7-0/msautotest/wxs/data/obs.csv
              hreflang: en-US
            - type: text/csv
              rel: alternate
              title: data
              href: https://raw.githubusercontent.com/mapserver/mapserver/branch-7-0/msautotest/wxs/data/obs.csv
              hreflang: en-US
        extents:
            spatial:
                bbox: [-180,-90,180,90]
                crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
            temporal:
                begin: 2000-10-30T18:24:39Z
                end: 2007-10-30T08:57:29Z
        providers:
            - type: feature
              name: CSV
              data: tests/data/obs.csv
              id_field: id
              geometry:
                  x_field: long
                  y_field: lat
